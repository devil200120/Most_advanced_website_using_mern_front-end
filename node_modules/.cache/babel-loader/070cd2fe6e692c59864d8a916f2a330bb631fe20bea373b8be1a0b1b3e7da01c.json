{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT0001\\\\Desktop\\\\exam_site\\\\front-end\\\\src\\\\components\\\\AvatarImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvatarImage = ({\n  src,\n  alt = \"Avatar\",\n  className = \"\"\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  useEffect(() => {\n    if (src) {\n      setImageLoaded(false);\n      setImageError(false);\n\n      // Test if image can be loaded\n      const img = new Image();\n      img.onload = () => {\n        console.log('✅ Image preload successful:', src);\n        setImageLoaded(true);\n      };\n      img.onerror = () => {\n        console.error('❌ Image preload failed:', src);\n        setImageError(true);\n      };\n      img.src = src;\n    }\n  }, [src]);\n  if (!src || imageError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `avatar-placeholder ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: src,\n    alt: alt,\n    className: `avatar-image ${className}`,\n    style: {\n      display: imageLoaded ? 'block' : 'none',\n      opacity: imageLoaded ? 1 : 0\n    },\n    onLoad: () => {\n      console.log('✅ Image element loaded:', src);\n      setImageLoaded(true);\n    },\n    onError: () => {\n      console.error('❌ Image element failed:', src);\n      setImageError(true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AvatarImage, \"lem3T0z5jBizamUrgG8nEKRUGXg=\");\n_c = AvatarImage;\nexport default AvatarImage;\nvar _c;\n$RefreshReg$(_c, \"AvatarImage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AvatarImage","src","alt","className","_s","imageLoaded","setImageLoaded","imageError","setImageError","img","Image","onload","console","log","onerror","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","opacity","onLoad","onError","_c","$RefreshReg$"],"sources":["C:/Users/KIIT0001/Desktop/exam_site/front-end/src/components/AvatarImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AvatarImage = ({ src, alt = \"Avatar\", className = \"\" }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      setImageLoaded(false);\r\n      setImageError(false);\r\n      \r\n      // Test if image can be loaded\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        console.log('✅ Image preload successful:', src);\r\n        setImageLoaded(true);\r\n      };\r\n      img.onerror = () => {\r\n        console.error('❌ Image preload failed:', src);\r\n        setImageError(true);\r\n      };\r\n      img.src = src;\r\n    }\r\n  }, [src]);\r\n\r\n  if (!src || imageError) {\r\n    return (\r\n      <div className={`avatar-placeholder ${className}`}>\r\n        <i className=\"fas fa-user\"></i>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <img \r\n      src={src}\r\n      alt={alt}\r\n      className={`avatar-image ${className}`}\r\n      style={{ \r\n        display: imageLoaded ? 'block' : 'none',\r\n        opacity: imageLoaded ? 1 : 0\r\n      }}\r\n      onLoad={() => {\r\n        console.log('✅ Image element loaded:', src);\r\n        setImageLoaded(true);\r\n      }}\r\n      onError={() => {\r\n        console.error('❌ Image element failed:', src);\r\n        setImageError(true);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AvatarImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG,GAAG,QAAQ;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,IAAII,GAAG,EAAE;MACPK,cAAc,CAAC,KAAK,CAAC;MACrBE,aAAa,CAAC,KAAK,CAAC;;MAEpB;MACA,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEZ,GAAG,CAAC;QAC/CK,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC;MACDG,GAAG,CAACK,OAAO,GAAG,MAAM;QAClBF,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEd,GAAG,CAAC;QAC7CO,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC;MACDC,GAAG,CAACR,GAAG,GAAGA,GAAG;IACf;EACF,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAET,IAAI,CAACA,GAAG,IAAIM,UAAU,EAAE;IACtB,oBACER,OAAA;MAAKI,SAAS,EAAE,sBAAsBA,SAAS,EAAG;MAAAa,QAAA,eAChDjB,OAAA;QAAGI,SAAS,EAAC;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAEV;EAEA,oBACErB,OAAA;IACEE,GAAG,EAAEA,GAAI;IACTC,GAAG,EAAEA,GAAI;IACTC,SAAS,EAAE,gBAAgBA,SAAS,EAAG;IACvCkB,KAAK,EAAE;MACLC,OAAO,EAAEjB,WAAW,GAAG,OAAO,GAAG,MAAM;MACvCkB,OAAO,EAAElB,WAAW,GAAG,CAAC,GAAG;IAC7B,CAAE;IACFmB,MAAM,EAAEA,CAAA,KAAM;MACZZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEZ,GAAG,CAAC;MAC3CK,cAAc,CAAC,IAAI,CAAC;IACtB,CAAE;IACFmB,OAAO,EAAEA,CAAA,KAAM;MACbb,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEd,GAAG,CAAC;MAC7CO,aAAa,CAAC,IAAI,CAAC;IACrB;EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAChB,EAAA,CAlDIJ,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}