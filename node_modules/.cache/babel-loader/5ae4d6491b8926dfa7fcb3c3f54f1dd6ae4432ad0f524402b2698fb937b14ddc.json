{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT0001\\\\Desktop\\\\exam_site\\\\front-end\\\\src\\\\pages\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNotification } from '../context/NotificationContext';\nimport api from '../services/api';\nimport Loading from '../components/Loading';\nimport './Notifications.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const {\n    notifications,\n    fetchNotifications,\n    markAsRead,\n    markAllAsRead\n  } = useNotification();\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [selectedNotifications, setSelectedNotifications] = useState([]);\n  useEffect(() => {\n    loadNotifications();\n  }, []);\n  const loadNotifications = async () => {\n    try {\n      await fetchNotifications();\n    } catch (error) {\n      console.error('Error loading notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatDate = date => {\n    const now = new Date();\n    const notificationDate = new Date(date);\n    const diffMs = now - notificationDate;\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins} minute${diffMins > 1 ? 's' : ''} ago`;\n    if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\n    if (diffDays < 7) return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\n    return notificationDate.toLocaleDateString();\n  };\n  const getNotificationIcon = type => {\n    const icons = {\n      exam: 'fas fa-clipboard-list',\n      result: 'fas fa-chart-bar',\n      reminder: 'fas fa-bell',\n      system: 'fas fa-cog',\n      payment: 'fas fa-credit-card',\n      message: 'fas fa-envelope',\n      achievement: 'fas fa-trophy',\n      warning: 'fas fa-exclamation-triangle',\n      info: 'fas fa-info-circle'\n    };\n    return icons[type] || 'fas fa-bell';\n  };\n  const getNotificationColor = type => {\n    const colors = {\n      exam: '#007bff',\n      result: '#28a745',\n      reminder: '#ffc107',\n      system: '#6c757d',\n      payment: '#17a2b8',\n      message: '#6f42c1',\n      achievement: '#fd7e14',\n      warning: '#dc3545',\n      info: '#17a2b8'\n    };\n    return colors[type] || '#007bff';\n  };\n  const filteredNotifications = notifications.filter(notification => {\n    if (filter === 'all') return true;\n    if (filter === 'unread') return !notification.read;\n    if (filter === 'read') return notification.read;\n    return notification.type === filter;\n  });\n  const unreadCount = notifications.filter(n => !n.read).length;\n  const handleNotificationClick = async notification => {\n    if (!notification.read) {\n      await markAsRead(notification._id);\n    }\n\n    // Handle notification action based on type\n    if (notification.actionUrl) {\n      window.location.href = notification.actionUrl;\n    }\n  };\n  const handleSelectNotification = notificationId => {\n    setSelectedNotifications(prev => {\n      if (prev.includes(notificationId)) {\n        return prev.filter(id => id !== notificationId);\n      } else {\n        return [...prev, notificationId];\n      }\n    });\n  };\n  const handleBulkDelete = async () => {\n    if (selectedNotifications.length === 0) {\n      alert('Please select notifications to delete');\n      return;\n    }\n    if (!window.confirm(`Are you sure you want to delete ${selectedNotifications.length} notifications?`)) {\n      return;\n    }\n    try {\n      await api.delete('/notifications/bulk', {\n        data: {\n          notificationIds: selectedNotifications\n        }\n      });\n\n      // Remove deleted notifications from state\n      setSelectedNotifications([]);\n      await loadNotifications();\n      alert('Notifications deleted successfully');\n    } catch (error) {\n      console.error('Error deleting notifications:', error);\n      alert('Error deleting notifications. Please try again.');\n    }\n  };\n  const handleSelectAll = () => {\n    if (selectedNotifications.length === filteredNotifications.length) {\n      setSelectedNotifications([]);\n    } else {\n      setSelectedNotifications(filteredNotifications.map(n => n._id));\n    }\n  };\n  const handleBulkMarkAsRead = async () => {\n    try {\n      await Promise.all(selectedNotifications.map(id => markAsRead(id)));\n      setSelectedNotifications([]);\n    } catch (error) {\n      console.error('Error marking notifications as read:', error);\n    }\n  };\n\n  // Removed redundant JSX block outside of return statement\n  const deleteNotification = async notificationId => {\n    if (window.confirm('Delete this notification?')) {\n      try {\n        await api.delete(`/notifications/${notificationId}`);\n        await fetchNotifications();\n      } catch (error) {\n        console.error('Error deleting notification:', error);\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {\n    message: \"Loading notifications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: unreadCount > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-count\",\n              children: unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 26\n            }, this), \" unread notifications\"]\n          }, void 0, true) : 'All notifications are read'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          onClick: markAllAsRead,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check-double\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), \"Mark All Read\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'all' ? 'active' : ''}`,\n            onClick: () => setFilter('all'),\n            children: [\"All (\", notifications.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'unread' ? 'active' : ''}`,\n            onClick: () => setFilter('unread'),\n            children: [\"Unread (\", unreadCount, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'read' ? 'active' : ''}`,\n            onClick: () => setFilter('read'),\n            children: [\"Read (\", notifications.length - unreadCount, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'exam' ? 'active' : ''}`,\n            onClick: () => setFilter('exam'),\n            children: \"Exams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'result' ? 'active' : ''}`,\n            onClick: () => setFilter('result'),\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'system' ? 'active' : ''}`,\n            onClick: () => setFilter('system'),\n            children: \"System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), filteredNotifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bulk-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-all\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedNotifications.length === filteredNotifications.length,\n                onChange: handleSelectAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), \"Select All\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), selectedNotifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-outline\",\n              onClick: handleBulkMarkAsRead,\n              children: [\"Mark Read (\", selectedNotifications.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-danger\",\n              onClick: handleBulkDelete,\n              children: [\"Delete (\", selectedNotifications.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-list\",\n        children: filteredNotifications.length > 0 ? filteredNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-select\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedNotifications.includes(notification._id),\n              onChange: () => handleSelectNotification(notification._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            onClick: () => handleNotificationClick(notification),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-circle\",\n                style: {\n                  backgroundColor: getNotificationColor(notification.type)\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: getNotificationIcon(notification.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"unread-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"notification-title\",\n                  children: notification.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-time\",\n                  children: formatDate(notification.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notification-message\",\n                children: notification.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), notification.metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-metadata\",\n                children: [notification.metadata.examTitle && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metadata-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-clipboard-list\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 29\n                  }, this), notification.metadata.examTitle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 27\n                }, this), notification.metadata.score && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metadata-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-star\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 29\n                  }, this), \"Score: \", notification.metadata.score, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn\",\n              onClick: e => {\n                e.stopPropagation();\n                deleteNotification(notification._id);\n              },\n              title: \"Delete notification\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-notifications\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-bell-slash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No notifications found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: filter === 'all' ? \"You don't have any notifications yet.\" : `No ${filter} notifications found.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"FdpP9mwCkKf317UMUU8PAnZwlZA=\", false, function () {\n  return [useNotification];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","useNotification","api","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","_s","notifications","fetchNotifications","markAsRead","markAllAsRead","loading","setLoading","filter","setFilter","selectedNotifications","setSelectedNotifications","loadNotifications","error","console","formatDate","date","now","Date","notificationDate","diffMs","diffDays","Math","floor","diffHours","diffMins","toLocaleDateString","getNotificationIcon","type","icons","exam","result","reminder","system","payment","message","achievement","warning","info","getNotificationColor","colors","filteredNotifications","notification","read","unreadCount","n","length","handleNotificationClick","_id","actionUrl","window","location","href","handleSelectNotification","notificationId","prev","includes","id","handleBulkDelete","alert","confirm","delete","data","notificationIds","handleSelectAll","map","handleBulkMarkAsRead","Promise","all","deleteNotification","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","checked","onChange","style","backgroundColor","title","createdAt","metadata","examTitle","score","e","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/KIIT0001/Desktop/exam_site/front-end/src/pages/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNotification } from '../context/NotificationContext';\r\nimport api from '../services/api';\r\nimport Loading from '../components/Loading';\r\nimport './Notifications.css';\r\n\r\nconst Notifications = () => {\r\n  const { notifications, fetchNotifications, markAsRead, markAllAsRead } = useNotification();\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState('all');\r\n  const [selectedNotifications, setSelectedNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadNotifications();\r\n  }, []);\r\n\r\n  const loadNotifications = async () => {\r\n    try {\r\n      await fetchNotifications();\r\n    } catch (error) {\r\n      console.error('Error loading notifications:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const now = new Date();\r\n    const notificationDate = new Date(date);\r\n    const diffMs = now - notificationDate;\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\r\n    const diffMins = Math.floor(diffMs / (1000 * 60));\r\n\r\n    if (diffMins < 1) return 'Just now';\r\n    if (diffMins < 60) return `${diffMins} minute${diffMins > 1 ? 's' : ''} ago`;\r\n    if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\r\n    if (diffDays < 7) return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\r\n    return notificationDate.toLocaleDateString();\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    const icons = {\r\n      exam: 'fas fa-clipboard-list',\r\n      result: 'fas fa-chart-bar',\r\n      reminder: 'fas fa-bell',\r\n      system: 'fas fa-cog',\r\n      payment: 'fas fa-credit-card',\r\n      message: 'fas fa-envelope',\r\n      achievement: 'fas fa-trophy',\r\n      warning: 'fas fa-exclamation-triangle',\r\n      info: 'fas fa-info-circle'\r\n    };\r\n    return icons[type] || 'fas fa-bell';\r\n  };\r\n\r\n  const getNotificationColor = (type) => {\r\n    const colors = {\r\n      exam: '#007bff',\r\n      result: '#28a745',\r\n      reminder: '#ffc107',\r\n      system: '#6c757d',\r\n      payment: '#17a2b8',\r\n      message: '#6f42c1',\r\n      achievement: '#fd7e14',\r\n      warning: '#dc3545',\r\n      info: '#17a2b8'\r\n    };\r\n    return colors[type] || '#007bff';\r\n  };\r\n\r\n  const filteredNotifications = notifications.filter(notification => {\r\n    if (filter === 'all') return true;\r\n    if (filter === 'unread') return !notification.read;\r\n    if (filter === 'read') return notification.read;\r\n    return notification.type === filter;\r\n  });\r\n\r\n  const unreadCount = notifications.filter(n => !n.read).length;\r\n\r\n  const handleNotificationClick = async (notification) => {\r\n    if (!notification.read) {\r\n      await markAsRead(notification._id);\r\n    }\r\n    \r\n    // Handle notification action based on type\r\n    if (notification.actionUrl) {\r\n      window.location.href = notification.actionUrl;\r\n    }\r\n  };\r\n\r\n  const handleSelectNotification = (notificationId) => {\r\n    setSelectedNotifications(prev => {\r\n      if (prev.includes(notificationId)) {\r\n        return prev.filter(id => id !== notificationId);\r\n      } else {\r\n        return [...prev, notificationId];\r\n      }\r\n    });\r\n  };\r\n  const handleBulkDelete = async () => {\r\n  if (selectedNotifications.length === 0) {\r\n    alert('Please select notifications to delete');\r\n    return;\r\n  }\r\n\r\n  if (!window.confirm(`Are you sure you want to delete ${selectedNotifications.length} notifications?`)) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await api.delete('/notifications/bulk', {\r\n      data: { notificationIds: selectedNotifications }\r\n    });\r\n    \r\n    // Remove deleted notifications from state\r\n    setSelectedNotifications([]);\r\n    await loadNotifications();\r\n    alert('Notifications deleted successfully');\r\n  } catch (error) {\r\n    console.error('Error deleting notifications:', error);\r\n    alert('Error deleting notifications. Please try again.');\r\n  }\r\n};\r\n\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedNotifications.length === filteredNotifications.length) {\r\n      setSelectedNotifications([]);\r\n    } else {\r\n      setSelectedNotifications(filteredNotifications.map(n => n._id));\r\n    }\r\n  };\r\n\r\n  const handleBulkMarkAsRead = async () => {\r\n    try {\r\n      await Promise.all(\r\n        selectedNotifications.map(id => markAsRead(id))\r\n      );\r\n      setSelectedNotifications([]);\r\n    } catch (error) {\r\n      console.error('Error marking notifications as read:', error);\r\n    }\r\n  };\r\n\r\n// Removed redundant JSX block outside of return statement\r\n  const deleteNotification = async (notificationId) => {\r\n    if (window.confirm('Delete this notification?')) {\r\n      try {\r\n        await api.delete(`/notifications/${notificationId}`);\r\n        await fetchNotifications();\r\n      } catch (error) {\r\n        console.error('Error deleting notification:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) return <Loading message=\"Loading notifications...\" />;\r\n\r\n  return (\r\n    <div className=\"notifications-container\">\r\n      <div className=\"notifications-header\">\r\n        <div className=\"header-info\">\r\n          <h1>Notifications</h1>\r\n          <p>\r\n            {unreadCount > 0 ? (\r\n              <>You have <span className=\"unread-count\">{unreadCount}</span> unread notifications</>\r\n            ) : (\r\n              'All notifications are read'\r\n            )}\r\n          </p>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {unreadCount > 0 && (\r\n            <button className=\"btn btn-outline\" onClick={markAllAsRead}>\r\n              <i className=\"fas fa-check-double\"></i>\r\n              Mark All Read\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"notifications-content\">\r\n        <div className=\"notifications-filters\">\r\n          <div className=\"filter-buttons\">\r\n            <button \r\n              className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\r\n              onClick={() => setFilter('all')}\r\n            >\r\n              All ({notifications.length})\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${filter === 'unread' ? 'active' : ''}`}\r\n              onClick={() => setFilter('unread')}\r\n            >\r\n              Unread ({unreadCount})\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${filter === 'read' ? 'active' : ''}`}\r\n              onClick={() => setFilter('read')}\r\n            >\r\n              Read ({notifications.length - unreadCount})\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${filter === 'exam' ? 'active' : ''}`}\r\n              onClick={() => setFilter('exam')}\r\n            >\r\n              Exams\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${filter === 'result' ? 'active' : ''}`}\r\n              onClick={() => setFilter('result')}\r\n            >\r\n              Results\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${filter === 'system' ? 'active' : ''}`}\r\n              onClick={() => setFilter('system')}\r\n            >\r\n              System\r\n            </button>\r\n          </div>\r\n\r\n          {filteredNotifications.length > 0 && (\r\n            <div className=\"bulk-actions\">\r\n              <div className=\"select-all\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedNotifications.length === filteredNotifications.length}\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                  Select All\r\n                </label>\r\n              </div>\r\n              \r\n              {selectedNotifications.length > 0 && (\r\n                <div className=\"action-buttons\">\r\n                  <button \r\n                    className=\"btn btn-sm btn-outline\"\r\n                    onClick={handleBulkMarkAsRead}\r\n                  >\r\n                    Mark Read ({selectedNotifications.length})\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={handleBulkDelete}\r\n                  >\r\n                    Delete ({selectedNotifications.length})\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"notifications-list\">\r\n          {filteredNotifications.length > 0 ? (\r\n            filteredNotifications.map((notification) => (\r\n              <div \r\n                key={notification._id}\r\n                className={`notification-item ${!notification.read ? 'unread' : ''}`}\r\n              >\r\n                <div className=\"notification-select\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedNotifications.includes(notification._id)}\r\n                    onChange={() => handleSelectNotification(notification._id)}\r\n                  />\r\n                </div>\r\n                \r\n                <div \r\n                  className=\"notification-content\"\r\n                  onClick={() => handleNotificationClick(notification)}\r\n                >\r\n                  <div className=\"notification-icon\">\r\n                    <div \r\n                      className=\"icon-circle\"\r\n                      style={{ backgroundColor: getNotificationColor(notification.type) }}\r\n                    >\r\n                      <i className={getNotificationIcon(notification.type)}></i>\r\n                    </div>\r\n                    {!notification.read && <div className=\"unread-dot\"></div>}\r\n                  </div>\r\n                  \r\n                  <div className=\"notification-details\">\r\n                    <div className=\"notification-header\">\r\n                      <h3 className=\"notification-title\">{notification.title}</h3>\r\n                      <span className=\"notification-time\">\r\n                        {formatDate(notification.createdAt)}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"notification-message\">{notification.message}</p>\r\n                    {notification.metadata && (\r\n                      <div className=\"notification-metadata\">\r\n                        {notification.metadata.examTitle && (\r\n                          <span className=\"metadata-item\">\r\n                            <i className=\"fas fa-clipboard-list\"></i>\r\n                            {notification.metadata.examTitle}\r\n                          </span>\r\n                        )}\r\n                        {notification.metadata.score && (\r\n                          <span className=\"metadata-item\">\r\n                            <i className=\"fas fa-star\"></i>\r\n                            Score: {notification.metadata.score}%\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"notification-actions\">\r\n                  <button \r\n                    className=\"action-btn\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      deleteNotification(notification._id);\r\n                    }}\r\n                    title=\"Delete notification\"\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"empty-notifications\">\r\n              <div className=\"empty-icon\">\r\n                <i className=\"fas fa-bell-slash\"></i>\r\n              </div>\r\n              <h3>No notifications found</h3>\r\n              <p>\r\n                {filter === 'all' \r\n                  ? \"You don't have any notifications yet.\"\r\n                  : `No ${filter} notifications found.`\r\n                }\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}