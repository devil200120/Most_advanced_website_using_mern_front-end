{"ast":null,"code":"// File: c:\\Users\\KIIT0001\\Desktop\\exam_site\\frontend\\src\\services\\api.js\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`API Request: ${config.method.toUpperCase()} ${config.url}`, config.data || '');\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log(`API Response: ${response.config.url}`, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response$data, _error$response2, _error$response3;\n  console.error('API Error Response:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // Unauthorized - redirect to login\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n        toast.error('Session expired. Please login again.');\n        break;\n      case 403:\n        toast.error('Access denied. You do not have permission.');\n        break;\n      case 404:\n        toast.error('Resource not found.');\n        break;\n      case 429:\n        toast.error('Too many requests. Please try again later.');\n        break;\n      case 500:\n        toast.error('Server error. Please try again later.');\n        break;\n      default:\n        if ((_error$response$data = error.response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n          toast.error(error.response.data.message);\n        } else {\n          toast.error('An error occurred. Please try again.');\n        }\n    }\n  } else if (error.request) {\n    toast.error('Network error. Please check your connection.');\n  } else {\n    toast.error('An unexpected error occurred.');\n  }\n\n  // Handle token expiration\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403) {\n    var _error$response$data2, _error$response$data3;\n    // Check if it's a token error\n    if ((_error$response$data2 = error.response.data) !== null && _error$response$data2 !== void 0 && (_error$response$data3 = _error$response$data2.message) !== null && _error$response$data3 !== void 0 && _error$response$data3.toLowerCase().includes('token')) {\n      // Clear local auth data and reload page\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      alert('Your session has expired. Please log in again.');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const endpoints = {\n  // Auth endpoints\n  auth: {\n    login: '/auth/login',\n    register: '/auth/register',\n    logout: '/auth/logout',\n    me: '/auth/me',\n    refreshToken: '/auth/refresh-token',\n    forgotPassword: '/auth/forgot-password',\n    resetPassword: '/auth/reset-password',\n    verifyEmail: '/auth/verify-email',\n    changePassword: '/auth/change-password'\n  },\n  // User endpoints\n  users: {\n    getAll: '/users',\n    getById: id => `/users/${id}`,\n    updateProfile: '/users/profile',\n    delete: id => `/users/${id}`,\n    getStudents: '/users/students/list',\n    linkParent: '/users/link-parent',\n    updatePreferences: '/users/preferences'\n  },\n  // Exam endpoints\n  exams: {\n    getAll: '/exams',\n    getById: id => `/exams/${id}`,\n    create: '/exams',\n    update: id => `/exams/${id}`,\n    delete: id => `/exams/${id}`,\n    addQuestions: id => `/exams/${id}/questions`,\n    publish: id => `/exams/${id}/publish`,\n    getStats: id => `/exams/${id}/stats`\n  },\n  // Question endpoints\n  questions: {\n    getAll: '/questions',\n    getById: id => `/questions/${id}`,\n    create: '/questions',\n    update: id => `/questions/${id}`,\n    delete: id => `/questions/${id}`,\n    bulkCreate: '/questions/bulk',\n    getStats: id => `/questions/${id}/stats`\n  },\n  // Submission endpoints\n  submissions: {\n    start: '/submissions/start',\n    submitAnswer: '/submissions/answer',\n    submit: '/submissions/submit',\n    getAll: '/submissions',\n    getById: id => `/submissions/${id}`,\n    grade: id => `/submissions/${id}/grade`\n  },\n  // Payment endpoints\n  payments: {\n    createStripeIntent: '/payments/stripe/create-intent',\n    createRazorpayOrder: '/payments/razorpay/create-order',\n    confirm: '/payments/confirm',\n    getHistory: '/payments/history',\n    getById: id => `/payments/${id}`,\n    refund: id => `/payments/${id}/refund`\n  },\n  // Notification endpoints\n  notifications: {\n    getAll: '/notifications',\n    create: '/notifications',\n    markAsRead: id => `/notifications/${id}/read`,\n    markAllAsRead: '/notifications/read-all',\n    delete: id => `/notifications/${id}`,\n    sendSystem: '/notifications/system',\n    getStats: '/notifications/stats'\n  },\n  // Report endpoints\n  reports: {\n    examPerformance: examId => `/reports/exam/${examId}/performance`,\n    studentProgress: studentId => `/reports/student/${studentId}/progress`,\n    classPerformance: (grade, section) => `/reports/class/${grade}/${section}`,\n    questionAnalysis: questionId => `/reports/question/${questionId}/analysis`,\n    systemOverview: '/reports/system/overview'\n  },\n  // Settings endpoints\n  settings: {\n    getAll: '/settings',\n    getByKey: key => `/settings/${key}`,\n    create: '/settings',\n    update: key => `/settings/${key}`,\n    delete: key => `/settings/${key}`,\n    getByCategory: category => `/settings/category/${category}`,\n    bulkUpdate: '/settings/bulk'\n  }\n};\n\n// Helper functions\nexport const apiCall = async (method, url, data = null, config = {}) => {\n  try {\n    const response = await api({\n      method,\n      url,\n      data,\n      ...config\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// File upload helper\nexport const uploadFile = async (endpoint, file, onProgress = null) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  if (onProgress) {\n    config.onUploadProgress = progressEvent => {\n      const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n      onProgress(percentCompleted);\n    };\n  }\n  return apiCall('POST', endpoint, formData, config);\n};\n\n// Batch requests helper\nexport const batchRequests = async requests => {\n  try {\n    const responses = await Promise.allSettled(requests);\n    return responses;\n  } catch (error) {\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","console","log","method","toUpperCase","url","data","error","Promise","reject","response","_error$response","_error$response$data","_error$response2","_error$response3","message","status","removeItem","window","location","href","_error$response$data2","_error$response$data3","toLowerCase","includes","alert","endpoints","auth","login","register","logout","me","refreshToken","forgotPassword","resetPassword","verifyEmail","changePassword","users","getAll","getById","id","updateProfile","delete","getStudents","linkParent","updatePreferences","exams","update","addQuestions","publish","getStats","questions","bulkCreate","submissions","start","submitAnswer","submit","grade","payments","createStripeIntent","createRazorpayOrder","confirm","getHistory","refund","notifications","markAsRead","markAllAsRead","sendSystem","reports","examPerformance","examId","studentProgress","studentId","classPerformance","section","questionAnalysis","questionId","systemOverview","settings","getByKey","key","getByCategory","category","bulkUpdate","apiCall","uploadFile","endpoint","file","onProgress","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","batchRequests","requests","responses","allSettled"],"sources":["C:/Users/KIIT0001/Desktop/exam_site/front-end/src/services/api.js"],"sourcesContent":["// File: c:\\Users\\KIIT0001\\Desktop\\exam_site\\frontend\\src\\services\\api.js\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    console.log(`API Request: ${config.method.toUpperCase()} ${config.url}`, config.data || '');\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`API Response: ${response.config.url}`, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error Response:', error.response?.data || error.message);\r\n    \r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          // Unauthorized - redirect to login\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          window.location.href = '/login';\r\n          toast.error('Session expired. Please login again.');\r\n          break;\r\n        case 403:\r\n          toast.error('Access denied. You do not have permission.');\r\n          break;\r\n        case 404:\r\n          toast.error('Resource not found.');\r\n          break;\r\n        case 429:\r\n          toast.error('Too many requests. Please try again later.');\r\n          break;\r\n        case 500:\r\n          toast.error('Server error. Please try again later.');\r\n          break;\r\n        default:\r\n          if (error.response.data?.message) {\r\n            toast.error(error.response.data.message);\r\n          } else {\r\n            toast.error('An error occurred. Please try again.');\r\n          }\r\n      }\r\n    } else if (error.request) {\r\n      toast.error('Network error. Please check your connection.');\r\n    } else {\r\n      toast.error('An unexpected error occurred.');\r\n    }\r\n    \r\n    // Handle token expiration\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      // Check if it's a token error\r\n      if (error.response.data?.message?.toLowerCase().includes('token')) {\r\n        // Clear local auth data and reload page\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        alert('Your session has expired. Please log in again.');\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API endpoints\r\nexport const endpoints = {\r\n  // Auth endpoints\r\n  auth: {\r\n    login: '/auth/login',\r\n    register: '/auth/register',\r\n    logout: '/auth/logout',\r\n    me: '/auth/me',\r\n    refreshToken: '/auth/refresh-token',\r\n    forgotPassword: '/auth/forgot-password',\r\n    resetPassword: '/auth/reset-password',\r\n    verifyEmail: '/auth/verify-email',\r\n    changePassword: '/auth/change-password'\r\n  },\r\n  \r\n  // User endpoints\r\n  users: {\r\n    getAll: '/users',\r\n    getById: (id) => `/users/${id}`,\r\n    updateProfile: '/users/profile',\r\n    delete: (id) => `/users/${id}`,\r\n    getStudents: '/users/students/list',\r\n    linkParent: '/users/link-parent',\r\n    updatePreferences: '/users/preferences'\r\n  },\r\n  \r\n  // Exam endpoints\r\n  exams: {\r\n    getAll: '/exams',\r\n    getById: (id) => `/exams/${id}`,\r\n    create: '/exams',\r\n    update: (id) => `/exams/${id}`,\r\n    delete: (id) => `/exams/${id}`,\r\n    addQuestions: (id) => `/exams/${id}/questions`,\r\n    publish: (id) => `/exams/${id}/publish`,\r\n    getStats: (id) => `/exams/${id}/stats`\r\n  },\r\n  \r\n  // Question endpoints\r\n  questions: {\r\n    getAll: '/questions',\r\n    getById: (id) => `/questions/${id}`,\r\n    create: '/questions',\r\n    update: (id) => `/questions/${id}`,\r\n    delete: (id) => `/questions/${id}`,\r\n    bulkCreate: '/questions/bulk',\r\n    getStats: (id) => `/questions/${id}/stats`\r\n  },\r\n  \r\n  // Submission endpoints\r\n  submissions: {\r\n    start: '/submissions/start',\r\n    submitAnswer: '/submissions/answer',\r\n    submit: '/submissions/submit',\r\n    getAll: '/submissions',\r\n    getById: (id) => `/submissions/${id}`,\r\n    grade: (id) => `/submissions/${id}/grade`\r\n  },\r\n  \r\n  // Payment endpoints\r\n  payments: {\r\n    createStripeIntent: '/payments/stripe/create-intent',\r\n    createRazorpayOrder: '/payments/razorpay/create-order',\r\n    confirm: '/payments/confirm',\r\n    getHistory: '/payments/history',\r\n    getById: (id) => `/payments/${id}`,\r\n    refund: (id) => `/payments/${id}/refund`\r\n  },\r\n  \r\n  // Notification endpoints\r\n  notifications: {\r\n    getAll: '/notifications',\r\n    create: '/notifications',\r\n    markAsRead: (id) => `/notifications/${id}/read`,\r\n    markAllAsRead: '/notifications/read-all',\r\n    delete: (id) => `/notifications/${id}`,\r\n    sendSystem: '/notifications/system',\r\n    getStats: '/notifications/stats'\r\n  },\r\n  \r\n  // Report endpoints\r\n  reports: {\r\n    examPerformance: (examId) => `/reports/exam/${examId}/performance`,\r\n    studentProgress: (studentId) => `/reports/student/${studentId}/progress`,\r\n    classPerformance: (grade, section) => `/reports/class/${grade}/${section}`,\r\n    questionAnalysis: (questionId) => `/reports/question/${questionId}/analysis`,\r\n    systemOverview: '/reports/system/overview'\r\n  },\r\n  \r\n  // Settings endpoints\r\n  settings: {\r\n    getAll: '/settings',\r\n    getByKey: (key) => `/settings/${key}`,\r\n    create: '/settings',\r\n    update: (key) => `/settings/${key}`,\r\n    delete: (key) => `/settings/${key}`,\r\n    getByCategory: (category) => `/settings/category/${category}`,\r\n    bulkUpdate: '/settings/bulk'\r\n  }\r\n};\r\n\r\n// Helper functions\r\nexport const apiCall = async (method, url, data = null, config = {}) => {\r\n  try {\r\n    const response = await api({\r\n      method,\r\n      url,\r\n      data,\r\n      ...config\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// File upload helper\r\nexport const uploadFile = async (endpoint, file, onProgress = null) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  };\r\n  \r\n  if (onProgress) {\r\n    config.onUploadProgress = (progressEvent) => {\r\n      const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n      onProgress(percentCompleted);\r\n    };\r\n  }\r\n  \r\n  return apiCall('POST', endpoint, formData, config);\r\n};\r\n\r\n// Batch requests helper\r\nexport const batchRequests = async (requests) => {\r\n  try {\r\n    const responses = await Promise.allSettled(requests);\r\n    return responses;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}